"use strict";const JSON_URL="data/psionics.json",STR_JOIN_MODE_LIST=",",TMP_HIDDEN_MODE='"{0}"',ID_PSIONICS_LIST="psionicsList",ID_STATS_ORDER_AND_TYPE="orderAndType",ID_TEXT="text",JSON_ITEM_NAME="name",JSON_ITEM_SOURCE="source",JSON_ITEM_TYPE="type",JSON_ITEM_ORDER="order",JSON_ITEM_MODES="modes",JSON_ITEM_SUBMODES="submodes",CLS_PSIONICS="psionics",CLS_COL1="col-xs-5",CLS_COL2="col-xs-2",CLS_COL3="col-xs-2",CLS_COL4="col-xs-2",CLS_HIDDEN="hidden",CLS_LI_NONE="list-entry-none",LIST_NAME="name",LIST_SOURCE="source",LIST_TYPE="type",LIST_ORDER="order",LIST_MODE_LIST="mode-list";function getHiddenModeList(t){const e=t[JSON_ITEM_MODES];if(void 0===e)return STR_EMPTY;const i=[];for(let t=0;t<e.length;++t)if(i.push(TMP_HIDDEN_MODE.formatUnicorn(e[t].name)),void 0!==e[t][JSON_ITEM_SUBMODES]){const s=e[t][JSON_ITEM_SUBMODES];for(let t=0;t<s.length;++t)i.push(TMP_HIDDEN_MODE.formatUnicorn(s[t].name))}return i.join(STR_JOIN_MODE_LIST)}let list;window.onload=function(){ExcludeUtil.initialise(),DataUtil.loadJSON(JSON_URL).then(onJsonLoad)};const sourceFilter=getSourceFilter({deselFn:()=>!1});let filterBox;function onJsonLoad(t){const e=new Filter({header:"Type",items:[Parser.PSI_ABV_TYPE_TALENT,Parser.PSI_ABV_TYPE_DISCIPLINE],displayFn:Parser.psiTypeToFull}),i=new Filter({header:"Order",items:["Avatar","Awakened","Immortal","Nomad","Wu Jen",Parser.PSI_ORDER_NONE]});filterBox=initFilterBox(sourceFilter,e,i),(list=ListUtil.search({valueNames:[LIST_NAME,LIST_SOURCE,LIST_TYPE,LIST_ORDER,LIST_MODE_LIST],listClass:CLS_PSIONICS,sortFunction:SortUtil.listSort})).on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange),RollerUtil.addListRollButton();ListUtil.initSublist({valueNames:["name","type","order","id"],listClass:"subpsionics",getSublistRow:getSublistItem});ListUtil.initGenericPinnable(),addPsionics(t),BrewUtil.pAddBrewData().then(addPsionics).catch(BrewUtil.purgeBrew).then(()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({list:list,filterBox:filterBox,sourceFilter:sourceFilter}),ListUtil.loadState(),RollerUtil.addListRollButton(),History.init(!0)})}let renderer,psionicList=[],psI=0;function addPsionics(t){if(!t.psionic||!t.psionic.length)return;psionicList=psionicList.concat(t.psionic);let e="";for(;psI<psionicList.length;psI++){const t=psionicList[psI];ExcludeUtil.isExcluded(t.name,"psionic",t.source)||(t[JSON_ITEM_ORDER]=Parser.psiOrderToFull(t[JSON_ITEM_ORDER]),e+=`\n\t\t\t<li class='row' ${FLTR_ID}="${psI}" onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">\n\t\t\t\t<a id='${psI}' href='#${UrlUtil.autoEncodeHash(t)}' title="${t[JSON_ITEM_NAME]}">\n\t\t\t\t\t<span class='${LIST_NAME} ${CLS_COL1}'>${t[JSON_ITEM_NAME]}</span>\n\t\t\t\t\t<span class='${LIST_SOURCE} ${CLS_COL2}' title="${Parser.sourceJsonToFull(t[JSON_ITEM_SOURCE])}">${Parser.sourceJsonToAbv(t[JSON_ITEM_SOURCE])}</span>\n\t\t\t\t\t<span class='${LIST_TYPE} ${CLS_COL3}'>${Parser.psiTypeToFull(t[JSON_ITEM_TYPE])}</span>\n\t\t\t\t\t<span class='${LIST_ORDER} ${CLS_COL4} ${t[JSON_ITEM_ORDER]===STR_NONE?CLS_LI_NONE:STR_EMPTY}'>${t[JSON_ITEM_ORDER]}</span>\n\t\t\t\t\t<span class='${LIST_MODE_LIST} ${CLS_HIDDEN}'>${getHiddenModeList(t)}</span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`,sourceFilter.addIfAbsent(t[JSON_ITEM_SOURCE]))}const i=ListUtil.getSearchTermAndReset(list);$(`#${ID_PSIONICS_LIST}`).append(e),sourceFilter.items.sort(SortUtil.ascSort),list.reIndex(),i&&list.search(i),list.sort("name"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:psionicList,getSublistRow:getSublistItem,primaryLists:[list]}),ListUtil.bindPinButton(),EntryRenderer.hover.bindPopoutButton(psionicList),UrlUtil.bindLinkExportButton(filterBox),ListUtil.bindDownloadButton(),ListUtil.bindUploadButton()}function handleFilterChange(){const t=filterBox.getValues();list.filter(function(e){const i=psionicList[$(e.elm).attr(FLTR_ID)];return filterBox.toDisplay(t,i.source,i.type,i.order)}),FilterBox.nextIfHidden(psionicList)}function getSublistItem(t,e){return`\n\t\t<li class="row" ${FLTR_ID}="${e}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">\n\t\t\t<a href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t<span class="name col-xs-6">${t.name}</span>\n\t\t\t\t<span class="type col-xs-3">${Parser.psiTypeToFull(t.type)}</span>\n\t\t\t\t<span class="order col-xs-3 ${t.order===STR_NONE?CLS_LI_NONE:""}">${t.order}</span>\n\t\t\t\t<span class="id hidden">${e}</span>\t\t\t\t\n\t\t\t</a>\n\t\t</li>\n\t`}function loadhash(t){renderer||(renderer=EntryRenderer.getDefaultRenderer()),renderer.setFirstSection(!0);const e=$("#pagecontent").empty(),i=psionicList[t];e.append(`\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t${EntryRenderer.utils.getNameTr(i)}\n\t\t<tr>\n\t\t\t<td colspan="6"><i>${"T"===i.type?Parser.psiTypeToFull(i[JSON_ITEM_TYPE]):`${i[JSON_ITEM_ORDER]} ${Parser.psiTypeToFull(i[JSON_ITEM_TYPE])}`}</i><span id="order"></span> <span id="type"></span></td>\n\t\t</tr>\n\t\t<tr><td class="divider" colspan="6"><div></div></td></tr>\n\t\t<tr class="text"><td colspan="6" id="text">${"T"===i.type?EntryRenderer.psionic.getTalentText(i,renderer):EntryRenderer.psionic.getDisciplineText(i,renderer)}</td></tr>\n\t\t${EntryRenderer.utils.getPageTr(i)}\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t`),ListUtil.updateSelected()}function loadsub(t){filterBox.setFromSubHashes(t),ListUtil.setFromSubHashes(t)}