"use strict";const JSON_URL="data/feats.json";let list;window.onload=function(){ExcludeUtil.initialise(),DataUtil.loadJSON(JSON_URL).then(onJsonLoad)};const sourceFilter=getSourceFilter();let filterBox;function onJsonLoad(t){list=ListUtil.search({valueNames:["name","source","ability","prerequisite"],listClass:"feats"});const e=getAsiFilter(),i=new Filter({header:"Prerequisite",items:["Ability","Race","Proficiency","Spellcasting"]});filterBox=initFilterBox(sourceFilter,e,i),list.on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange);ListUtil.initSublist({valueNames:["name","ability","prerequisite","id"],listClass:"subfeats",getSublistRow:getSublistItem});ListUtil.initGenericPinnable(),addFeats(t),BrewUtil.pAddBrewData().then(addFeats).catch(BrewUtil.purgeBrew).then(()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({list:list,filterBox:filterBox,sourceFilter:sourceFilter}),ListUtil.loadState(),RollerUtil.addListRollButton(),History.init(!0)})}let featList=[],ftI=0;function addFeats(t){if(!t.feat||!t.feat.length)return;featList=featList.concat(t.feat);const e=$("ul.feats");let i="";for(;ftI<featList.length;ftI++){const t=featList[ftI];if(ExcludeUtil.isExcluded(t.name,"feat",t.source))continue;const e=t.name,s=utils_getAbilityData(t.ability);s.asText||(s.asText=STR_NONE),t._fAbility=s.asCollection.filter(t=>!s.areNegative.includes(t));let n=EntryRenderer.feat.getPrerequisiteText(t.prerequisite,!0);n||(n=STR_NONE);const r="name col-xs-3 col-xs-3-8",l=`source col-xs-1 col-xs-1-7 source${t.source}`,a="ability "+(s.asText===STR_NONE?"list-entry-none ":"")+"col-xs-3 col-xs-3-5",o="prerequisite "+(n===STR_NONE?"list-entry-none ":"")+"col-xs-3",c=new Set;(t.prerequisite||[]).forEach(t=>c.add(...Object.keys(t))),t._fPrereq=[...c].map(t=>t.uppercaseFirst()),t._slAbility=s.asText,t._slPrereq=n,i+=`\n\t\t\t<li class="row" ${FLTR_ID}="${ftI}" onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">\n\t\t\t\t<a id='${ftI}' href='#${UrlUtil.autoEncodeHash(t)}' title="${e}">\n\t\t\t\t\t<span class='${r}'>${e}</span>\n\t\t\t\t\t<span class='${l}' title="${Parser.sourceJsonToFull(t.source)}">${Parser.sourceJsonToAbv(t.source)}</span>\n\t\t\t\t\t<span class='${a}'>${s.asText}</span>\n\t\t\t\t\t<span class='${o}'>${n}</span>\n\t\t\t\t</a>\n\t\t\t</li>`,sourceFilter.addIfAbsent(t.source)}const s=ListUtil.getSearchTermAndReset(list);e.append(i),sourceFilter.items.sort(SortUtil.ascSort),list.reIndex(),s&&list.search(s),list.sort("name"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:featList,getSublistRow:getSublistItem,primaryLists:[list]}),ListUtil.bindPinButton(),EntryRenderer.hover.bindPopoutButton(featList),UrlUtil.bindLinkExportButton(filterBox),ListUtil.bindDownloadButton(),ListUtil.bindUploadButton()}function handleFilterChange(){const t=filterBox.getValues();list.filter(function(e){const i=featList[$(e.elm).attr(FLTR_ID)];return filterBox.toDisplay(t,i.source,i._fAbility,i._fPrereq)}),FilterBox.nextIfHidden(featList)}function getSublistItem(t,e){return`\n\t\t<li class="row" ${FLTR_ID}="${e}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">\n\t\t\t<a href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t<span class="name col-xs-4">${t.name}</span>\t\t\n\t\t\t\t<span class="ability col-xs-4 ${t._slAbility===STR_NONE?"list-entry-none":""}">${t._slAbility}</span>\t\t\n\t\t\t\t<span class="prerequisite col-xs-4 ${t._slPrereq===STR_NONE?"list-entry-none":""}">${t._slPrereq}</span>\t\t\n\t\t\t\t<span class="id hidden">${e}</span>\t\t\t\t\n\t\t\t</a>\n\t\t</li>\n\t`}const renderer=EntryRenderer.getDefaultRenderer();function loadhash(t){renderer.setFirstSection(!0);const e=$("#pagecontent").empty(),i=featList[t],s=EntryRenderer.feat.getPrerequisiteText(i.prerequisite);EntryRenderer.feat.mergeAbilityIncrease(i);const n=[];renderer.recursiveEntryRender({entries:i.entries},n,2),e.append(`\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t${EntryRenderer.utils.getNameTr(i)}\n\t\t${s?`<tr><td colspan="6"><span class="prerequisite">Prerequisite: ${s}</span></td></tr>`:""}\n\t\t<tr><td class="divider" colspan="6"><div></div></td></tr>\n\t\t<tr class='text'><td colspan='6'>${n.join("")}</td></tr>\n\t\t${EntryRenderer.utils.getPageTr(i)}\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t`),ListUtil.updateSelected()}function loadsub(t){filterBox.setFromSubHashes(t),ListUtil.setFromSubHashes(t)}