"use strict";const JSON_URL="data/races.json",JSON_FLUFF_URL="data/fluff-races.json";function getAbilityObjs(t){function e(t,e){return{asi:t,amount:e,_toIdString:()=>`${t}${e}`}}const n=new CollectionUtil.ObjectSet;return t.choose&&t.choose.forEach(t=>{const s=t.amount||1;t.from.forEach(t=>{n.add(e(t,s))})}),Object.keys(t).forEach(s=>{"choose"!==s&&n.add(e(s,t[s]))}),Array.from(n.values())}function mapAbilityObjToFull(t){return`${Parser.attAbvToFull(t.asi)} ${t.amount<0?"":"+"}${t.amount}`}let list;window.onload=function(){ExcludeUtil.initialise(),DataUtil.loadJSON(JSON_URL).then(onJsonLoad)};const sourceFilter=getSourceFilter(),sizeFilter=new Filter({header:"Size",displayFn:Parser.sizeAbvToFull});let filterBox;function onJsonLoad(t){list=ListUtil.search({valueNames:["name","ability","size","source","clean-name"],listClass:"races"});const e=EntryRenderer.race.mergeSubraces(t.race),n=new Filter({header:"Ability Bonus (Including Subrace)",items:["Strength +2","Strength +1","Dexterity +2","Dexterity +1","Constitution +2","Constitution +1","Intelligence +2","Intelligence +1","Wisdom +2","Wisdom +1","Charisma +2","Charisma +1"]}),s=new Filter({header:"Speed",items:["Climb","Fly","Swim","Walk"]}),r=new Filter({header:"Miscellaneous",items:["Darkvision","Spellcasting","NPC Race"],deselFn:t=>"NPC Race"===t});filterBox=initFilterBox(sourceFilter,n,sizeFilter,s,r),list.on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange);ListUtil.initSublist({valueNames:["name","ability","size","id"],listClass:"subraces",getSublistRow:getSublistItem});ListUtil.initGenericPinnable(),addRaces({race:e}),BrewUtil.pAddBrewData().then(addRaces).catch(BrewUtil.purgeBrew).then(()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({list:list,filterBox:filterBox,sourceFilter:sourceFilter}),ListUtil.loadState(),RollerUtil.addListRollButton(),History.init(!0)})}let raceList=[],rcI=0;function addRaces(t){if(!t.race||!t.race.length)return;raceList=raceList.concat(t.race);const e=$("ul.races");let n="";for(;rcI<raceList.length;rcI++){const t=raceList[rcI];if(ExcludeUtil.isExcluded(t.name,"race",t.source))continue;const e=t.ability?utils_getAbilityData(t.ability):{asTextShort:"None"};t._fAbility=t.ability?getAbilityObjs(t.ability).map(t=>mapAbilityObjToFull(t)):[],t._fSpeed=t.speed.walk?[t.speed.climb?"Climb":null,t.speed.fly?"Fly":null,t.speed.swim?"Swim":null,"Walk"].filter(t=>t):"Walk",t._fMisc=[t.darkvision?"Darkvision":null,t.hasSpellcasting?"Spellcasting":null,t.npc?"NPC Race":null].filter(t=>t),t._fSources=ListUtil.getCompleteSources(t),t._slAbility=e.asTextShort;const s=/^(.*?) \((.*?)\)$/.exec(t.name);n+=`<li class="row" ${FLTR_ID}='${rcI}' onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">\n\t\t\t\t<a id='${rcI}' href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t\t<span class='name col-xs-4'>${t.name}</span>\n\t\t\t\t\t<span class='ability col-xs-4'>${e.asTextShort}</span>\n\t\t\t\t\t<span class='size col-xs-2'>${Parser.sizeAbvToFull(t.size)}</span>\n\t\t\t\t\t<span class='source col-xs-2 source${t.source}' title="${Parser.sourceJsonToFull(t.source)}">${Parser.sourceJsonToAbv(t.source)}</span>\n\t\t\t\t\t${s?`<span class="clean-name hidden">${s[2]} ${s[1]}</span>`:""}\n\t\t\t\t</a>\n\t\t\t</li>`,sourceFilter.addIfAbsent(t._fSources),sizeFilter.addIfAbsent(t.size)}const s=ListUtil.getSearchTermAndReset(list);e.append(n),sourceFilter.items.sort(SortUtil.ascSort),sizeFilter.items.sort(function(t,e){return SortUtil.ascSort(n(t),n(e));function n(t){switch(t){case"M":return 0;case"S":return-1;case"V":return 1}}}),list.reIndex(),s&&list.search(s),list.sort("name"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:raceList,getSublistRow:getSublistItem,primaryLists:[list]}),ListUtil.bindPinButton(),EntryRenderer.hover.bindPopoutButton(raceList),UrlUtil.bindLinkExportButton(filterBox),ListUtil.bindDownloadButton(),ListUtil.bindUploadButton(),$("body").on("click",".btn-name-pronounce",function(){const t=$(this).find(".name-pronounce")[0];t.currentTime=0,t.play()})}function handleFilterChange(){const t=filterBox.getValues();list.filter(function(e){const n=raceList[$(e.elm).attr(FLTR_ID)];return filterBox.toDisplay(t,n._fSources,n._fAbility,n.size,n._fSpeed,n._fMisc)}),FilterBox.nextIfHidden(raceList)}function getSublistItem(t,e){return`\n\t\t<li class="row" ${FLTR_ID}="${e}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">\n\t\t\t<a href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t<span class="name col-xs-5">${t.name}</span>\t\t\n\t\t\t\t<span class="ability col-xs-5">${t._slAbility}</span>\t\t\n\t\t\t\t<span class="size col-xs-2">${Parser.sizeAbvToFull(t.size)}</span>\t\t\n\t\t\t\t<span class="id hidden">${e}</span>\t\t\t\t\n\t\t\t</a>\n\t\t</li>\n\t`}const renderer=EntryRenderer.getDefaultRenderer();function loadhash(t){renderer.setFirstSection(!0);const e=$("#pagecontent").empty(),n=raceList[t];const s=EntryRenderer.utils.tabButton("Traits",()=>{},function(){e.append(`\n\t\t<tbody>\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t<tr><th class="name" colspan="6">Name</th></tr>\n\t\t<tr><td id="ability" colspan="6">Ability Scores: <span>+1 Dex</span></td></tr>\n\t\t<tr><td id="size" colspan="6">Size: <span>Medium</span></td></tr>\n\t\t<tr><td id="speed" colspan="6">Speed: <span>30 ft.</span></td></tr>\n\t\t<tr id="traits"><td class="divider" colspan="6"><div></div></td></tr>\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t</tbody>\t\t\n\t\t`),e.find("th.name").html(`\n\t\t\t<span class="stats-name">${n.name}</span>\n\t\t\t${n.soundClip?`<span class="btn btn-xs btn-default btn-name-pronounce">\n\t\t\t\t<span class="glyphicon glyphicon-volume-up name-pronounce-icon"></span>\n\t\t\t\t<audio class="name-pronounce">\n\t\t\t\t   <source src="${n.soundClip}" type="audio/mpeg">\n\t\t\t\t   <source src="audio/races/${/^(.*?)(\(.*?\))?$/.exec(n._baseName||n.name)[1].trim().toLowerCase()}.mp3" type="audio/mpeg">\n\t\t\t\t</audio>\n\t\t\t</span>`:""}\n\t\t\t<span class="stats-source source${n.source}" title="${Parser.sourceJsonToFull(n.source)}">${Parser.sourceJsonToAbv(n.source)}</span>\n\t\t`);const t=Parser.sizeAbvToFull(n.size);e.find("td#size span").html(t);const s=n.ability?utils_getAbilityData(n.ability):{asText:"None"};e.find("td#ability span").html(s.asText),e.find("td#speed span").html(Parser.getSpeedString(n));const r=[];r.push("<tr class='text'><td colspan='6'>"),renderer.recursiveEntryRender({type:"entries",entries:n.entries},r,1),r.push("</td></tr>"),n.npc&&(r.push('<tr class="text"><td colspan="6"><section class="text-muted">'),renderer.recursiveEntryRender("{@i Note: This race is listed in the {@i Dungeon Master's Guide} as an option for creating NPCs. It is not designed for use as a playable race.}",r,2),r.push("</section></td></tr>")),r.push(EntryRenderer.utils.getPageTr(n)),e.find("tbody tr:last").before(r.join(""))}),r=EntryRenderer.utils.tabButton("Info",()=>{},()=>{function t(){return $('<tr class="text">')}function s(){return $('<td colspan="6" class="text">')}e.append(EntryRenderer.utils.getBorderTr()),e.append(EntryRenderer.utils.getNameTr(n));let r=t(),i=s().appendTo(r);e.append(r),e.append(EntryRenderer.utils.getBorderTr()),DataUtil.loadJSON(JSON_FLUFF_URL).then(e=>{function a(n){let a=t(),o=s().appendTo(a);r.after(a),r.after(EntryRenderer.utils.getDividerTr()),renderer.setFirstSection(!0),o.append(renderer.renderEntry(e.meta[n])),r=a,i=o}const o=n._baseName&&n.name.toLowerCase()===n._baseName.toLowerCase()?"":e.race.find(t=>t.name.toLowerCase()===n.name.toLowerCase()&&t.source.toLowerCase()===n.source.toLowerCase()),l=e.race.find(t=>n._baseName&&t.name.toLowerCase()===n._baseName.toLowerCase()&&n._baseSource&&t.source.toLowerCase()===n._baseSource.toLowerCase());if(n.fluff&&n.fluff.entries)renderer.setFirstSection(!0),i.append(renderer.renderEntry({type:"section",entries:n.fluff.entries}));else if(o||l){if(o&&o.entries&&!l)renderer.setFirstSection(!0),i.append(renderer.renderEntry({type:"section",entries:o.entries}));else if(o&&o.entries&&l&&l.entries){renderer.setFirstSection(!0),i.append(renderer.renderEntry({type:"section",entries:o.entries}));let e=t(),a=s().appendTo(e);r.after(e),r.after(EntryRenderer.utils.getDividerTr()),renderer.setFirstSection(!0),a.append(renderer.renderEntry({type:"section",name:n._baseName,entries:l.entries})),r=e,i=a}else l&&l.entries&&(renderer.setFirstSection(!0),i.append(renderer.renderEntry({type:"section",entries:l.entries})));(o&&o.uncommon||l&&l.uncommon)&&a("uncommon"),(o&&o.monstrous||l&&l.monstrous)&&a("monstrous")}else i.empty(),i.append(HTML_NO_INFO)})});EntryRenderer.utils.bindTabButtons(s,r),ListUtil.updateSelected()}function loadsub(t){filterBox.setFromSubHashes(t),ListUtil.setFromSubHashes(t)}