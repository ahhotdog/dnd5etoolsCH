"use strict";const JSON_URL="data/cultsboons.json";function cultBoonTypeToFull(t){return"c"===t?"Cult":"Demonic Boon"}let cultsAndBoonsList;window.onload=function(){DataUtil.loadJSON(JSON_URL).then(onJsonLoad)};const sourceFilter=getSourceFilter();let filterBox,list;function onJsonLoad(t){list=ListUtil.search({valueNames:["name","source","type"],listClass:"cultsboons",sortFunction:SortUtil.listSort});const e=new Filter({header:"Type",items:["b","c"],displayFn:cultBoonTypeToFull});filterBox=initFilterBox(sourceFilter,e),list.on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange),t.cult.forEach(t=>t._type="c"),t.boon.forEach(t=>t._type="b"),cultsAndBoonsList=t.cult.concat(t.boon);let s="";cultsAndBoonsList.forEach((t,e)=>{s+=`\n\t\t\t<li class="row" ${FLTR_ID}="${e}" onclick="ListUtil.toggleSelected(event, this)">\n\t\t\t\t<a id="${e}" href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t\t<span class="type col-xs-3 text-align-center">${cultBoonTypeToFull(t._type)}</span>\n\t\t\t\t\t<span class="name col-xs-7">${t.name}</span>\n\t\t\t\t\t<span class="source col-xs-2 source${t.source}" title="${Parser.sourceJsonToFull(t.source)}">${Parser.sourceJsonToAbv(t.source)}</span>\n\t\t\t\t</a>\n\t\t\t</li>`,sourceFilter.addIfAbsent(t.source)});const n=ListUtil.getSearchTermAndReset(list);$("ul.cultsboons").append(s),sourceFilter.items.sort(SortUtil.ascSort),list.reIndex(),n&&list.search(n),list.sort("type"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:cultsAndBoonsList,primaryLists:[list]}),History.init(!0)}function handleFilterChange(){const t=filterBox.getValues();list.filter(function(e){const s=cultsAndBoonsList[$(e.elm).attr(FLTR_ID)];return filterBox.toDisplay(t,s.source,s._type)}),FilterBox.nextIfHidden(cultsAndBoonsList)}const renderer=EntryRenderer.getDefaultRenderer();function loadhash(t){renderer.setFirstSection(!0);const e=cultsAndBoonsList[t],s=[];"c"===e._type?(EntryRenderer.cultboon.doRenderCultParts(e,renderer,s),renderer.recursiveEntryRender({entries:e.entries},s,2),$("#pagecontent").html(`\n\t\t\t<tr><th class="border" colspan="6"></th></tr>\n\t\t\t<tr><th class="name" colspan="6"><span class="stats-name">${e.name}</span><span class="stats-source source${e.source}" title="${Parser.sourceJsonToFull(e.source)}">${Parser.sourceJsonToAbv(e.source)}</span></th></tr>\n\t\t\t<tr id="text"><td class="divider" colspan="6"><div></div></td></tr>\n\t\t\t<tr class='text'><td colspan='6' class='text'>${s.join("")}</td></tr>\n\t\t\t${EntryRenderer.utils.getPageTr(e)}\n\t\t\t<tr><th class="border" colspan="6"></th></tr>\n\t\t`)):"b"===e._type&&(EntryRenderer.cultboon.doRenderBoonParts(e,renderer,s),renderer.recursiveEntryRender({entries:e.entries},s,1),$("#pagecontent").html(`\n\t\t\t<tr><th class="border" colspan="6"></th></tr>\n\t\t\t<tr><th class="name" colspan="6"><span class="stats-name">${"b"===e._type?"Demonic Boon: ":""}${e.name}</span><span class="stats-source source${e.source}" title="${Parser.sourceJsonToFull(e.source)}">${Parser.sourceJsonToAbv(e.source)}</span></th></tr>\n\t\t\t<tr class='text'><td colspan='6'>${s.join("")}</td></tr>\n\t\t\t${EntryRenderer.utils.getPageTr(e)}\n\t\t\t<tr><th class="border" colspan="6"></th></tr>\n\t\t`)),ListUtil.updateSelected()}