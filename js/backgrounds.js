"use strict";const JSON_URL="data/backgrounds.json",JSON_FLUFF_URL="data/fluff-backgrounds.json",renderer=EntryRenderer.getDefaultRenderer();let list;window.onload=function(){ExcludeUtil.initialise(),DataUtil.loadJSON(JSON_URL).then(onJsonLoad)};const sourceFilter=getSourceFilter();let filterBox=initFilterBox(sourceFilter);function onJsonLoad(t){(list=ListUtil.search({valueNames:["name","source"],listClass:"backgrounds"})).on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange);ListUtil.initSublist({valueNames:["name","id"],listClass:"subbackgrounds",getSublistRow:getSublistItem});ListUtil.initGenericPinnable(),addBackgrounds(t),BrewUtil.pAddBrewData().then(addBackgrounds).catch(BrewUtil.purgeBrew).then(()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({list:list,filterBox:filterBox,sourceFilter:sourceFilter}),ListUtil.loadState(),RollerUtil.addListRollButton(),History.init(!0)})}let bgList=[],bgI=0;function addBackgrounds(t){if(!t.background||!t.background.length)return;bgList=bgList.concat(t.background);const e=$("ul.backgrounds");let n="";for(;bgI<bgList.length;bgI++){const t=bgList[bgI];ExcludeUtil.isExcluded(t.name,"background",t.source)||(n+=`<li class="row" ${FLTR_ID}="${bgI}" onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">\n\t\t\t\t<a id='${bgI}' href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t\t<span class='name col-xs-10'>${t.name.replace("Variant ","")}</span>\n\t\t\t\t\t<span class='source col-xs-2 source${t.source}' title="${Parser.sourceJsonToFull(t.source)}">${Parser.sourceJsonToAbv(t.source)}</span>\n\t\t\t\t</a>\n\t\t\t</li>`,sourceFilter.addIfAbsent(t.source))}const r=ListUtil.getSearchTermAndReset(list);e.append(n),sourceFilter.items.sort(SortUtil.ascSort),list.reIndex(),r&&list.search(r),list.sort("name"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:bgList,getSublistRow:getSublistItem,primaryLists:[list]}),ListUtil.bindPinButton(),EntryRenderer.hover.bindPopoutButton(bgList),UrlUtil.bindLinkExportButton(filterBox),ListUtil.bindDownloadButton(),ListUtil.bindUploadButton()}function handleFilterChange(){const t=filterBox.getValues();list.filter(function(e){const n=bgList[$(e.elm).attr(FLTR_ID)];return filterBox.toDisplay(t,n.source)}),FilterBox.nextIfHidden(bgList)}function getSublistItem(t,e){return`\n\t\t<li class="row" ${FLTR_ID}="${e}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">\n\t\t\t<a href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t<span class="name col-xs-12">${t.name}</span>\t\t\n\t\t\t\t<span class="id hidden">${e}</span>\t\t\t\t\n\t\t\t</a>\n\t\t</li>\n\t`}function loadhash(t){renderer.setFirstSection(!0);const e=$("#pagecontent").empty(),n=bgList[t];const r=EntryRenderer.utils.tabButton("Traits",()=>{},function(){const t=[],r={type:"entries",entries:n.entries};renderer.recursiveEntryRender(r,t,1),e.append(`\n\t\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t\t${EntryRenderer.utils.getNameTr(n)}\n\t\t\t<tr><td class="divider" colspan="6"><div></div></td></tr>\n\t\t\t<tr class='trait'><td colspan='6'>${t.join("")}</td></tr>\n\t\t\t${EntryRenderer.utils.getPageTr(n)}\n\t\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t`)}),s=EntryRenderer.utils.tabButton("Info",()=>{},()=>{e.append(EntryRenderer.utils.getBorderTr()),e.append(EntryRenderer.utils.getNameTr(n));let t=$('<tr class="text">'),r=$('<td colspan="6" class="text">').appendTo(t);e.append(t),e.append(EntryRenderer.utils.getBorderTr()),DataUtil.loadJSON(JSON_FLUFF_URL).then(t=>{const e=t.background.find(t=>t.name.toLowerCase()===n.name.toLowerCase()&&t.source.toLowerCase()===n.source.toLowerCase());n.fluff&&n.fluff.entries?(renderer.setFirstSection(!0),r.append(renderer.renderEntry({type:"section",entries:n.fluff.entries}))):e&&e.entries?(renderer.setFirstSection(!0),r.append(renderer.renderEntry({type:"section",entries:e.entries}))):(r.empty(),r.append(HTML_NO_INFO))})});EntryRenderer.utils.bindTabButtons(r,s),ListUtil.updateSelected()}function loadsub(t){filterBox.setFromSubHashes(t),ListUtil.setFromSubHashes(t)}