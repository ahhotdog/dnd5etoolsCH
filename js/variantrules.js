"use strict";const JSON_URL="data/variantrules.json";let tableDefault;window.onload=function(){ExcludeUtil.initialise(),DataUtil.loadJSON(JSON_URL).then(onJsonLoad)};const entryRenderer=EntryRenderer.getDefaultRenderer();let list;const sourceFilter=getSourceFilter();let filterBox;function onJsonLoad(t){list=ListUtil.search({valueNames:["name","source","search"],listClass:"variantRules"}),tableDefault=$("#pagecontent").html(),filterBox=initFilterBox(sourceFilter),list.on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange);ListUtil.initSublist({valueNames:["name"],listClass:"subVariantRules"});ListUtil.initGenericPinnable(),addListShowHide(),addVariantRules(t),BrewUtil.pAddBrewData().then(addVariantRules).catch(BrewUtil.purgeBrew).then(()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({list:list,filterBox:filterBox,sourceFilter:sourceFilter}),History.init(!0)})}let rulesList=[],rlI=0;function addVariantRules(t){if(!t.variantrule||!t.variantrule.length)return;rulesList=rulesList.concat(t.variantrule);let e="";for(;rlI<rulesList.length;rlI++){const t=rulesList[rlI];if(ExcludeUtil.isExcluded(t.name,"variantrule",t.source))continue;const s=[];for(const e of t.entries)EntryRenderer.getNames(s,e);e+=`\n\t\t\t<li class="row" ${FLTR_ID}="${rlI}" onclick="ListUtil.toggleSelected(event, this)">\n\t\t\t\t<a id="${rlI}" href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t\t<span class="name col-xs-10">${t.name}</span>\n\t\t\t\t\t<span class="source col-xs-2 source${Parser.sourceJsonToAbv(t.source)}" title="${Parser.sourceJsonToFull(t.source)}">${Parser.sourceJsonToAbv(t.source)}</span>\n\t\t\t\t\t<span class="search hidden">${s.join(",")}</span>\n\t\t\t\t</a>\n\t\t\t</li>`,sourceFilter.addIfAbsent(t.source)}const s=ListUtil.getSearchTermAndReset(list);$("ul.variantRules").append(e),sourceFilter.items.sort(SortUtil.ascSort),list.reIndex(),s&&list.search(s),list.sort("name"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:rulesList,getSublistRow:getSublistItem,primaryLists:[list]}),ListUtil.bindPinButton(),EntryRenderer.hover.bindPopoutButton(rulesList)}function getSublistItem(t,e){return`\n\t\t<li class="row" ${FLTR_ID}="${e}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">\n\t\t\t<a href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t<span class="name col-xs-12">${t.name}</span>\n\t\t\t\t<span class="id hidden">${e}</span>\n\t\t\t</a>\n\t\t</li>\n\t`}function handleFilterChange(){const t=filterBox.getValues();list.filter(function(e){const s=rulesList[$(e.elm).attr(FLTR_ID)];return filterBox.toDisplay(t,s.source)}),FilterBox.nextIfHidden(rulesList)}function loadhash(t){entryRenderer.setFirstSection(!0),$("#pagecontent").html(tableDefault);const e=rulesList[t];$("tr.text").remove();const s=[];entryRenderer.recursiveEntryRender(e,s),$("tr#text").after("<tr class='text'><td colspan='6'>"+s.join("")+"</td></tr>"),ListUtil.updateSelected()}