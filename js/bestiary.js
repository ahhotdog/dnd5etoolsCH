"use strict";const JSON_DIR="data/bestiary/",META_URL="meta.json",FLUFF_INDEX="fluff-index.json",JSON_LIST_NAME="monster",renderer=EntryRenderer.getDefaultRenderer();function ascSortCr(t,e){return"Unknown"!==t&&void 0!==t||(t="999"),"Unknown"!==e&&void 0!==e||(e="999"),SortUtil.ascSort(Parser.crToNumber(t),Parser.crToNumber(e))}function imgError(t){$(t).closest("th").css("padding-right","0.2em"),$(t).remove()}function getAllImmRest(t,e){const n=[];return t.forEach(t=>{!function t(r){"string"==typeof r?n.push(r):r[e]&&r[e].forEach(e=>t(e))}(t)}),n}function basename(t,e){return t.substr(t.lastIndexOf(e)+1)}window.PROF_MODE_BONUS="bonus",window.PROF_MODE_DICE="dice",window.PROF_DICE_MODE=PROF_MODE_BONUS;const meta={};function pLoadMeta(){return new Promise(t=>{DataUtil.loadJSON(JSON_DIR+META_URL).then(e=>{for(let t=0;t<e.legendaryGroup.length;t++)meta[e.legendaryGroup[t].name]={lairActions:e.legendaryGroup[t].lairActions,regionalEffects:e.legendaryGroup[t].regionalEffects};t()})})}function addLegendaryGroups(t){t&&t.length&&t.forEach(t=>{meta[t.name]={lairActions:t.lairActions,regionalEffects:t.regionalEffects}})}let list,printBookView,ixFluff={};function pLoadFluffIndex(){return new Promise(t=>{DataUtil.loadJSON(JSON_DIR+FLUFF_INDEX).then(e=>{ixFluff=e,t()})})}function handleBrew(t){addLegendaryGroups(t.legendaryGroup),addMonsters(t.monster)}function pPostLoad(){return new Promise(t=>{BrewUtil.pAddBrewData().then(handleBrew).catch(BrewUtil.purgeBrew).then(()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({list:list,filterBox:filterBox,sourceFilter:sourceFilter}),ListUtil.loadState(),t()})})}window.onload=function(){ExcludeUtil.initialise(),pLoadMeta().then(pLoadFluffIndex).then(multisourceLoad.bind(null,JSON_DIR,JSON_LIST_NAME,pageInit,addMonsters,pPostLoad))};const sourceFilter=getSourceFilter(),crFilter=new Filter({header:"CR"}),sizeFilter=new Filter({header:"Size",items:[SZ_TINY,SZ_SMALL,SZ_MEDIUM,SZ_LARGE,SZ_HUGE,SZ_GARGANTUAN,SZ_VARIES],displayFn:Parser.sizeAbvToFull}),speedFilter=new Filter({header:"Speed",items:["walk","burrow","climb","fly","hover","swim"],displayFn:StrUtil.uppercaseFirst}),strengthFilter=new RangeFilter({header:"Strength"}),dexterityFilter=new RangeFilter({header:"Dexterity"}),constitutionFilter=new RangeFilter({header:"Constitution"}),intelligenceFilter=new RangeFilter({header:"Intelligence"}),wisdomFilter=new RangeFilter({header:"Wisdom"}),charismaFilter=new RangeFilter({header:"Charisma"}),abilityScoreFilter=new MultiFilter("Ability Score",strengthFilter,dexterityFilter,constitutionFilter,intelligenceFilter,wisdomFilter,charismaFilter);abilityScoreFilter.setModeAnd();const acFilter=new RangeFilter({header:"Armor Class"}),averageHpFilter=new RangeFilter({header:"Average Hit Points"}),typeFilter=new Filter({header:"Type",items:["aberration","beast","celestial","construct","dragon","elemental","fey","fiend","giant","humanoid","monstrosity","ooze","plant","undead"],displayFn:StrUtil.uppercaseFirst}),tagFilter=new Filter({header:"Tag",displayFn:StrUtil.uppercaseFirst}),alignmentFilter=new Filter({header:"Alignment",items:["L","NX","C","G","NY","E","N","U","A"],displayFn:Parser.alignmentAbvToFull}),environmentFilter=new Filter({header:"Environment",items:["arctic","coastal","desert","forest","grassland","hill","mountain","swamp","underdark","underwater","urban"],displayFn:StrUtil.uppercaseFirst}),DMG_TYPES=["acid","bludgeoning","cold","fire","force","lightning","necrotic","piercing","poison","psychic","radiant","slashing","thunder"],CONDS=["blinded","charmed","deafened","exhaustion","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious","disease"];function dispVulnFilter(t){return`${StrUtil.uppercaseFirst(t)} Vuln`}const vulnerableFilter=new Filter({header:"Damage Vulnerabilities",items:DMG_TYPES,displayFn:dispVulnFilter});function dispResFilter(t){return`${StrUtil.uppercaseFirst(t)} Res`}const resistFilter=new Filter({header:"Damage Resistance",items:DMG_TYPES,displayFn:dispResFilter});function dispImmFilter(t){return`${StrUtil.uppercaseFirst(t)} Imm`}const immuneFilter=new Filter({header:"Damage Immunity",items:DMG_TYPES,displayFn:dispImmFilter}),conditionImmuneFilter=new Filter({header:"Condition Immunity",items:CONDS,displayFn:StrUtil.uppercaseFirst}),traitFilter=new Filter({header:"Traits",items:["Aggressive","Ambusher","Amorphous","Amphibious","Antimagic Susceptibility","Brute","Charge","Damage Absorption","Death Burst","Devil's Sight","False Appearance","Fey Ancestry","Flyby","Hold Breath","Illumination","Immutable Form","Incorporeal Movement","Keen Senses","Legendary Resistances","Light Sensitivity","Magic Resistance","Magic Weapons","Pack Tactics","Pounce","Rampage","Reckless","Regeneration","Rejuvenation","Shapechanger","Siege Monster","Sneak Attack","Spider Climb","Sunlight Sensitivity","Turn Immunity","Turn Resistance","Undead Fortitude","Water Breathing","Web Sense","Web Walker"]}),actionReactionFilter=new Filter({header:"Actions & Reactions",items:["Frightful Presence","Multiattack","Parry","Swallow","Teleport","Tentacles"]}),miscFilter=new Filter({header:"Miscellaneous",items:["Familiar","Lair Actions","Legendary","NPC","Spellcaster","Regional Effects","Swarm"],displayFn:StrUtil.uppercaseFirst,deselFn:t=>"NPC"===t}),filterBox=initFilterBox(sourceFilter,crFilter,sizeFilter,speedFilter,abilityScoreFilter,acFilter,averageHpFilter,typeFilter,tagFilter,alignmentFilter,environmentFilter,vulnerableFilter,resistFilter,immuneFilter,conditionImmuneFilter,traitFilter,actionReactionFilter,miscFilter);function pageInit(t){sourceFilter.items=Object.keys(t).map(t=>new FilterItem(t,loadSource(JSON_LIST_NAME,addMonsters))),sourceFilter.items.sort(SortUtil.ascSort),(list=ListUtil.search({valueNames:["name","source","type","cr","group"],listClass:"monsters"})).on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange),$("#filtertools").find("button.sort").on(EVNT_CLICK,function(){const t=$(this);t.data("sortby","asc"===t.data("sortby")?"desc":"asc"),list.sort(t.data("sort"),{order:t.data("sortby"),sortFunction:sortMonsters})});ListUtil.initSublist({valueNames:["name","source","type","cr","count","id"],listClass:"submonsters",sortFunction:sortMonsters,onUpdate:onSublistChange});ListUtil.bindAddButton(),ListUtil.bindSubtractButton(),ListUtil.initGenericAddable(),printBookView=new BookModeView("bookview",$("#btn-printbook"),"Please make a list of creatures first",t=>{const e=ListUtil.getSublistedIds().map(t=>monsters[t]).sort((t,e)=>SortUtil.ascSort(t.name,e.name));let n=0;const r=[];return r.push('<tr class="printbook-bestiary"><td>'),e.forEach(t=>{r.push('<table class="printbook-bestiary-entry"><tbody>'),r.push(EntryRenderer.monster.getCompactRenderedString(t,renderer)),r.push("</tbody></table>")}),r.push("</td></tr>"),n+=e.length,t.append(r.join("")),n}),$("button#profbonusdice").click(function(){window.PROF_DICE_MODE===PROF_MODE_DICE?(window.PROF_DICE_MODE=PROF_MODE_BONUS,this.innerHTML="Use Proficiency Dice",$("#pagecontent").find("span.render-roller, span.dc-roller").each(function(){const t=$(this);t.attr("mode",""),t.html(t.attr("data-roll-prof-bonus"))})):(window.PROF_DICE_MODE=PROF_MODE_DICE,this.innerHTML="Use Proficiency Bonus",$("#pagecontent").find("span.render-roller, span.dc-roller").each(function(){const t=$(this);t.attr("mode","dice"),t.html(t.attr("data-roll-prof-dice"))}))})}function onSublistChange(){const t=$("#totalcr");let e=0,n=0;ListUtil.sublist.items.forEach(t=>{const r=monsters[Number(t._values.id)],s=Number($(t.elm).find(".count").text());n+=s,r.cr&&(e+=Parser.crToXpNumber(r.cr)*s)}),t.html(`${e.toLocaleString()} XP (Enc: ${(Parser.numMonstersToXpMult(n)*e).toLocaleString()} XP)`)}function handleFilterChange(){const t=filterBox.getValues();list.filter(function(e){const n=monsters[$(e.elm).attr(FLTR_ID)];return filterBox.toDisplay(t,n.source,n._pCr,n.size,n._fSpeed,[n.str,n.dex,n.con,n.int,n.wis,n.cha],n._fAc,n._fHp,n._pTypes.type,n._pTypes.tags,n._fAlign,n.environment,n._fVuln,n._fRes,n._fImm,n._fCondImm,n.traitTags,n.actionTags,n._fMisc)}),onFilterChangeMulti(monsters)}let monsters=[],mI=0;const _NEUT_ALIGNS=["NX","NY"];function addMonsters(t){if(!t||!t.length)return;monsters=monsters.concat(t);const e=$("ul.monsters");let n="";for(;mI<monsters.length;mI++){const t=monsters[mI];if(ExcludeUtil.isExcluded(t.name,"monster",t.source))continue;t._pTypes=Parser.monTypeToFullObj(t.type),t._pCr=void 0===t.cr?"Unknown":t.cr.cr||t.cr,t._fSpeed=Object.keys(t.speed).filter(e=>t.speed[e]),t.speed.canHover&&t._fSpeed.push("hover"),t._fAc=t.ac.map(t=>t.ac||t),t._fHp=t.hp.average;const e="object"==typeof t.alignment[0]?Array.prototype.concat.apply([],t.alignment.map(t=>t.alignment)):[...t.alignment];!e.includes("N")||e.includes("G")||e.includes("E")?!e.includes("N")||e.includes("L")||e.includes("C")?1===e.length&&e.includes("N")&&Array.prototype.push.apply(e,_NEUT_ALIGNS):e.push("NX"):e.push("NY"),t._fAlign=e,t.environment=t.environment||[],t._fVuln=t.vulnerable?getAllImmRest(t.vulnerable,"vulnerable"):[],t._fRes=t.resist?getAllImmRest(t.resist,"resist"):[],t._fImm=t.immune?getAllImmRest(t.immune,"immune"):[],t._fCondImm=t.conditionImmune?getAllImmRest(t.conditionImmune,"conditionImmune"):[];const r=Parser.sourceJsonToAbv(t.source);n+=`<li class="row" ${FLTR_ID}="${mI}" onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">\n\t\t\t\t<a id=${mI} href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t\t<span class="name col-xs-4 col-xs-4-2">${t.name}</span>\n\t\t\t\t\t<span title="${Parser.sourceJsonToFull(t.source)}${EntryRenderer.utils.getSourceSubText(t)}" class="col-xs-2 source source${r}">${r}</span>\n\t\t\t\t\t<span class="type col-xs-4 col-xs-4-1">${t._pTypes.asText.uppercaseFirst()}</span>\n\t\t\t\t\t<span class="col-xs-1 col-xs-1-7 text-align-center cr">${t._pCr}</span>\n\t\t\t\t\t${t.group?`<span class="group hidden">${t.group}</span>`:""}\n\t\t\t\t</a>\n\t\t\t</li>`,sourceFilter.addIfAbsent(new FilterItem(t.source,()=>{})),crFilter.addIfAbsent(t._pCr),strengthFilter.addIfAbsent(t.str),dexterityFilter.addIfAbsent(t.dex),constitutionFilter.addIfAbsent(t.con),intelligenceFilter.addIfAbsent(t.int),wisdomFilter.addIfAbsent(t.wis),charismaFilter.addIfAbsent(t.cha),t.ac.forEach(t=>acFilter.addIfAbsent(t.ac||t)),t.hp.average&&averageHpFilter.addIfAbsent(t.hp.average),t._pTypes.tags.forEach(t=>tagFilter.addIfAbsent(t)),t._fMisc=t.legendary||t.legendaryGroup?["Legendary"]:[],t.familiar&&t._fMisc.push("Familiar"),t.type.swarmSize&&t._fMisc.push("Swarm"),t.spellcasting&&t._fMisc.push("Spellcaster"),t.isNPC&&t._fMisc.push("NPC"),t.legendaryGroup&&(meta[t.legendaryGroup].lairActions&&t._fMisc.push("Lair Actions"),meta[t.legendaryGroup].regionalEffects&&t._fMisc.push("Regional Effects"))}const r=ListUtil.getSearchTermAndReset(list);e.append(n),sourceFilter.items.sort(SortUtil.ascSort),crFilter.items.sort(ascSortCr),typeFilter.items.sort(SortUtil.ascSort),tagFilter.items.sort(SortUtil.ascSort),list.reIndex(),r&&list.search(r),list.sort("name"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:monsters,getSublistRow:getSublistItem,primaryLists:[list]}),EntryRenderer.hover.bindPopoutButton(monsters),UrlUtil.bindLinkExportButton(filterBox),ListUtil.bindDownloadButton(),ListUtil.bindUploadButton(sublistFuncPreload),$("body").on("click",".btn-name-pronounce",function(){const t=$(this).find(".name-pronounce")[0];t.currentTime=0,t.play()})}function sublistFuncPreload(t,e){const n=Object.keys(loadedSources).filter(t=>loadedSources[t].loaded),r=t.sources.map(t=>t.toLowerCase()),s=Object.keys(loadedSources).filter(t=>!n.includes(t)).filter(t=>r.includes(t.toLowerCase())),i=s.length;if(i){let t=0;s.forEach(n=>{loadSource(JSON_LIST_NAME,n=>{addMonsters(n),++t===i&&e()})(n,"yes")})}else e()}function getSublistItem(t,e,n){return`\n\t\t<li class="row" ${FLTR_ID}="${e}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">\n\t\t\t<a href="#${UrlUtil.autoEncodeHash(t)}" title="${t.name}">\n\t\t\t\t<span class="name col-xs-4">${t.name}</span>\n\t\t\t\t<span class="type col-xs-3">${t._pTypes.asText.uppercaseFirst()}</span>\n\t\t\t\t<span class="cr col-xs-3 text-align-center">${t._pCr}</span>\t\t\n\t\t\t\t<span class="count col-xs-2 text-align-center">${n||1}</span>\t\t\n\t\t\t\t<span class="id hidden">${e}</span>\t\t\t\t\n\t\t\t</a>\n\t\t</li>\n\t`}function sortMonsters(t,e,n){return"count"===n.valueName?SortUtil.ascSort(Number(t.values().count),Number(e.values().count)):(t=monsters[t.elm.getAttribute(FLTR_ID)],e=monsters[e.elm.getAttribute(FLTR_ID)],"name"===n.valueName?SortUtil.ascSort(t.name,e.name):"type"===n.valueName?SortUtil.ascSort(t._pTypes.asText,e._pTypes.asText):"source"===n.valueName?SortUtil.ascSort(t.source,e.source):"cr"===n.valueName?ascSortCr(t._pCr,e._pCr):0)}let profBtn=null;function loadhash(t){renderer.setFirstSection(!0);const e=$("#pagecontent").empty(),n=$("#wrp-profbonusdice"),r=monsters[t];function s(n){e.append(EntryRenderer.utils.getBorderTr());const s=$(EntryRenderer.utils.getNameTr(monsters[t]));s.find("th").css("padding-right","0.3em"),e.append(s);const i=$("<tr class='text'/>");e.append(i);const a=$("<td colspan='6' class='text'/>").appendTo(i);function o(t){const e=r.fluff||t.monster.find(t=>t.name===r.name&&t.source===r.source);if(!e)return a.empty(),void a.append(HTML_NO_INFO);if(e._copy){const n=t.monster.find(t=>e._copy.name===t.name&&e._copy.source===t.source),r=e.name,s=e.source,i=e.images;Object.assign(e,n),e.name=r,e.source=s,i&&(e.images=i),delete e._copy}if(e._appendCopy){const n=t.monster.find(t=>e._appendCopy.name===t.name&&e._appendCopy.source===t.source);n.images&&(e.images?e.images=e.images.concat(n.images):e.images=n.images),n.entries&&(e.entries?e.entries=e.entries.concat(n.entries):e.entries=n.entries),delete e._appendCopy}if(n)e.images?e.images.forEach(t=>a.append(renderer.renderEntry(t,1))):a.append(HTML_NO_IMAGES);else if(e.entries){const t="section"===e.type?-1:2;a.append(renderer.renderEntry({type:e.type,entries:e.entries},t))}else a.append(HTML_NO_INFO)}e.append(EntryRenderer.utils.getBorderTr()),renderer.setFirstSection(!0),ixFluff[r.source]||r.fluff?r.fluff?o():DataUtil.loadJSON(JSON_DIR+ixFluff[r.source]).then(o):(a.empty(),n?a.append(HTML_NO_IMAGES):a.append(HTML_NO_INFO))}null!==profBtn&&(n.append(profBtn),profBtn=null);const i=EntryRenderer.utils.tabButton("Statblock",()=>n.append(profBtn),function(){e.append(`\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t<tr><th class="name" colspan="6">Name <span class="source" title="Source book">SRC</span></th></tr>\n\t\t<tr><td id="sizetypealignment" colspan="6"><span id="size">Size</span> <span id="type">type</span>, <span id="alignment">alignment</span></td></tr>\n\t\t<tr><td class="divider" colspan="6"><div></div></td></tr>\n\t\t<tr><td colspan="6"><strong>Armor Class</strong> <span id="ac">## (source)</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Hit Points</strong> <span id="hp">hp</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Speed</strong> <span id="speed">30 ft.</span></td></tr>\n\t\t<tr><td class="divider" colspan="6"><div></div></td></tr>\n\t\t<tr id="abilitynames"><th>STR</th><th>DEX</th><th>CON</th><th>INT</th><th>WIS</th><th>CHA</th></tr>\n\t\t<tr id="abilityscores">\n\t\t\t<td id="str">${EntryRenderer.getDefaultRenderer().renderEntry(`{@dice 1d20${Parser.getAbilityModifier(r.str)}|${r.str} (${Parser.getAbilityModifier(r.str)})|Strength}`)}</td>\n\t\t\t<td id="dex">${EntryRenderer.getDefaultRenderer().renderEntry(`{@dice 1d20${Parser.getAbilityModifier(r.dex)}|${r.dex} (${Parser.getAbilityModifier(r.dex)})|Dexterity}`)}</td>\n\t\t\t<td id="con">${EntryRenderer.getDefaultRenderer().renderEntry(`{@dice 1d20${Parser.getAbilityModifier(r.con)}|${r.con} (${Parser.getAbilityModifier(r.con)})|Constitution}`)}</td>\n\t\t\t<td id="int">${EntryRenderer.getDefaultRenderer().renderEntry(`{@dice 1d20${Parser.getAbilityModifier(r.int)}|${r.int} (${Parser.getAbilityModifier(r.int)})|Intelligence}`)}</td>\n\t\t\t<td id="wis">${EntryRenderer.getDefaultRenderer().renderEntry(`{@dice 1d20${Parser.getAbilityModifier(r.wis)}|${r.wis} (${Parser.getAbilityModifier(r.wis)})|Wisdom}`)}</td>\n\t\t\t<td id="cha">${EntryRenderer.getDefaultRenderer().renderEntry(`{@dice 1d20${Parser.getAbilityModifier(r.cha)}|${r.cha} (${Parser.getAbilityModifier(r.cha)})|Charisma}`)}</td>\n\t\t</tr>\n\t\t<tr><td class="divider" colspan="6"><div></div></td></tr>\n\t\t<tr><td colspan="6"><strong>Saving Throws</strong> <span id="saves">Str +0</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Skills</strong> <span id="skills">Perception +0</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Damage Vulnerabilities</strong> <span id="dmgvuln">fire</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Damage Resistances</strong> <span id="dmgres">cold</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Damage Immunities</strong> <span id="dmgimm">lightning</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Condition Immunities</strong> <span id="conimm">exhaustion</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Senses</strong> <span id="senses">darkvision 30 ft.</span> passive Perception <span id="pp">10</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Languages</strong> <span id="languages">Common</span></td></tr>\n\t\t<tr><td colspan="6"><strong>Challenge</strong> <span id="cr">1 (450 XP)</span></td></tr>\n\t\t<tr id="traits"><td class="divider" colspan="6"><div></div></td></tr>\n\t\t<tr class="trait"><td colspan="6"><span class="name">Trait.</span> <span class="content">Content.</span></td></tr>\n\t\t<tr id="actions"><td colspan="6"><span>Actions</span></td></tr>\n\t\t<tr class="action"><td colspan="6"><span class="name">Action.</span> <span class="content">Content.</span></td></tr>\n\t\t<tr id="reactions"><td colspan="6"><span>Reactions</span></td></tr>\n\t\t<tr class="reaction"><td colspan="6"><span class="name">Reaction.</span> <span class="content">Content.</span></td></tr>\n\t\t<tr id="legendaries"><td colspan="6"><span>Legendary Actions</span></td></tr>\n\t\t<tr class="legendary"><td colspan="6"><span class="name">Action.</span> <span class="content">Content.</span></td></tr>\n\t\t<tr id="lairactions"><td colspan="6"><span>Lair Actions</span></td></tr>\n\t\t<tr class="lairaction"><td colspan="6"><span class="name">Action.</span> <span class="content">Content.</span></td></tr>\n\t\t<tr id="regionaleffects"><td colspan="6"><span>Regional Effects</span></td></tr>\n\t\t<tr class="regionaleffect"><td colspan="6"><span class="name">Effect.</span> <span class="content">Content.</span></td></tr>\n\t\t<tr id="variants"></tr>\n\t\t<tr id="source"></tr>\n\t\t${EntryRenderer.utils.getBorderTr()}\n\t\t`);let t=[],n={};const s=r.name;let i=Parser.sourceJsonToAbv(r.source),a=Parser.sourceJsonToFull(r.source);const o=r._pTypes.asText,l=r.tokenURL||UrlUtil.link(`img/${i}/${s.replace(/"/g,"")}.png`);e.find("th.name").html(`<span class="stats-name">${s}</span>\n\t\t\t${r.soundClip?`<span class="btn btn-xs btn-default btn-name-pronounce">\n\t\t\t\t<span class="glyphicon glyphicon-volume-up name-pronounce-icon"></span>\n\t\t\t\t<audio class="name-pronounce">\n\t\t\t\t   <source src="${r.soundClip}" type="audio/mpeg">\n\t\t\t\t   <source src="audio/bestiary/${basename(r.soundClip,"/")}" type="audio/mpeg">\n\t\t\t\t</audio>\n\t\t\t</span>`:""}\n\t\t<span class="stats-source source${i}" title="${a}${EntryRenderer.utils.getSourceSubText(r)}">${i}</span>\n\t\t<a href="${l}" target="_blank">\n\t\t\t<img src="${l}" class="token" onerror="imgError(this)">\n\t\t</a>`),e.find("td span#size").html(Parser.sizeAbvToFull(r.size)),e.find("td span#type").html(o),e.find("td span#alignment").html(Parser.alignmentListToFull(r.alignment).toLowerCase()),e.find("td span#ac").html(Parser.acToFull(r.ac)),e.find("td span#hp").html(EntryRenderer.monster.getRenderedHp(r.hp)),e.find("td span#speed").html(Parser.getSpeedString(r));var d=r.save;if(d){const t=Object.keys(d).map(t=>EntryRenderer.monster.getSave(renderer,t,r.save[t])).join(", ");e.find("td span#saves").parent().show(),e.find("td span#saves").html(t)}else e.find("td span#saves").parent().hide();r.skill?(e.find("td span#skills").parent().show(),e.find("td span#skills").html(EntryRenderer.monster.getSkillsString(r))):e.find("td span#skills").parent().hide();var c=r.vulnerable;c?(e.find("td span#dmgvuln").parent().show(),e.find("td span#dmgvuln").html(Parser.monImmResToFull(c))):e.find("td span#dmgvuln").parent().hide();var p=r.resist;p?(e.find("td span#dmgres").parent().show(),e.find("td span#dmgres").html(Parser.monImmResToFull(p))):e.find("td span#dmgres").parent().hide();var u=r.immune;u?(e.find("td span#dmgimm").parent().show(),e.find("td span#dmgimm").html(Parser.monImmResToFull(u))):e.find("td span#dmgimm").parent().hide();var m=r.conditionImmune;m?(e.find("td span#conimm").parent().show(),e.find("td span#conimm").html(Parser.monCondImmToFull(m))):e.find("td span#conimm").parent().hide();var f=r.senses;f?e.find("td span#senses").html(f+", "):e.find("td span#senses").html(""),e.find("td span#pp").html(r.passive);var g=r.languages;g?e.find("td span#languages").html(g):e.find("td span#languages").html("—"),e.find("td span#cr").html(Parser.monCrToFull(r.cr)),e.find("tr.trait").remove();let h=EntryRenderer.monster.getOrderedTraits(r,renderer);h&&I("trait","trait",h,1);const y=r.action;e.find("tr#actions").hide(),e.find("tr.action").remove(),y&&I("action","action",y,1);const F=r.reaction;e.find("tr#reactions").hide(),e.find("tr.reaction").remove(),F&&I("reaction","reaction",F,1);const b=EntryRenderer.monster.getDragonCasterVariant(renderer,r),S=r.variant,_=e.find("#variants");if(S||b){const t=[];(S||[]).forEach(e=>renderer.recursiveEntryRender(e,t)),b&&t.push(b),_.html(`<td colspan=6>${t.join("")}</td>`),_.show()}else _.hide();const E={source:r.source,sourceSub:r.sourceSub,page:r.page},R=r.additionalSources?JSON.parse(JSON.stringify(r.additionalSources)):[];r.variant&&r.variant.length>1&&r.variant.forEach(t=>{t.variantSource&&R.push({source:t.variantSource.source,page:t.variantSource.page})}),E.additionalSources=R,e.find("#source").append(EntryRenderer.utils.getPageTr(E));const v=r.legendary;e.find("tr#legendaries").hide(),e.find("tr.legendary").remove(),v&&(I("legendary","legendary",v,1),e.find("tr#legendaries").after(`<tr class='legendary'><td colspan='6' class='legendary'><span class='name'></span> <span>${EntryRenderer.monster.getLegendaryActionIntro(r)}</span></td></tr>`));const w=r.legendaryGroup;if(e.find("tr.lairaction").remove(),e.find("tr#lairactions").hide(),e.find("tr.regionaleffect").remove(),e.find("tr#regionaleffects").hide(),w){const t=meta[w];t.lairActions&&I("lairaction","legendary",t.lairActions,0),t.regionalEffects&&I("regionaleffect","legendary",t.regionalEffects,0)}function I(r,s,i,a){let o="legendary"===r?"legendaries":`${r}s`;e.find(`tr#${o}`).show(),n={type:"entries",entries:i},t=[],i.forEach(e=>{e.rendered?t.push(e.rendered):renderer.recursiveEntryRender(e,t,a+1)}),e.find(`tr#${o}`).after(`<tr class='${r}'><td colspan='6' class='${s}'>${t.join("")}</td></tr>`)}e.find("#abilityscores td").each(function(){$(this).wrapInner(`<span class="roller" data-roll="1d20${$(this).children(".mod").html()}" title="${Parser.attAbvToFull($(this).prop("id"))}"></span>`)});const A=PROF_DICE_MODE===PROF_MODE_DICE;r.skill&&e.find("#skills").each(function(){const t=$(this),e=t.html().split(/,\s*(?![^()]*\))/g).map(t=>t.trim()),n=[];e.map(t=>{const e=t.match(/([-+])?\d+|(?:[^+]|\n(?!\+))+/g),r=e[0].trim();var s="";e.map(t=>{if(t.match(/([-+])?\d+/)){const e=Number(t),n=`+${e}`;s+=function(t,e,n){return t=t.replace(/plus one of the following:/g,"").replace(/^or\s*/,""),EntryRenderer.getDefaultRenderer().renderEntry(`{@dice 1d20${e}|${e}|${t}${n?" save":""}`)}(r,n,!1)}else s+=t}),n.push(s)}),t.html(n.join(", "))}),e.find(".render-roller").filter(function(){return $(this).text().match(/^([-+])?\d+$/)}).each(function(){const t=Number($(this).text()),e=Parser.crToPb(r.cr);let n=1,s=e;if("saves"===$(this).parent().prop("id")){const i=$(this).attr("title").split(" ")[0].trim().toLowerCase().substring(0,3);n=(s=t-Parser.getAbilityModNumber(r[i]))==2*e?2:1}else if("skills"===$(this).parent().prop("id")){const i=$(this).attr("title");n=(s=t-Parser.getAbilityModNumber(r[getAttribute(i)]))==2*e?2:1}const i=t-s;if(e>0){const t=`${n}d${s*(3-n)}${i>=0?"+":""}${i}`;$(this).attr("data-roll-prof-bonus",$(this).text()),$(this).attr("data-roll-prof-dice",t);const e=EntryRenderer.dice._parse(t).dice.map(t=>({number:t.num,faces:t.faces}));e.unshift({number:1,faces:20});const r=$(this).attr("onclick"),a=`\n\t\t\t\t\t(function(it) {\n\t\t\t\t\t\tif (PROF_DICE_MODE === PROF_MODE_DICE) {\n\t\t\t\t\t\t\tEntryRenderer.dice.rollerClick(it, '{"type":"dice","rollable":true,"toRoll":${JSON.stringify(e)}}'${$(this).prop("title")?`, '${$(this).prop("title")}'`:""})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t${r.replace(/this/g,"it")}\n\t\t\t\t\t\t}\n\t\t\t\t\t})(this)`;$(this).attr("onclick",a),A&&$(this).html(t)}}),e.find("p").each(function(){$(this).html($(this).html().replace(/DC\s*(\d+)/g,function(t,e){const n=Number(e),s=Parser.crToPb(r.cr);if(s>0){const t=n-s,r=`1d${2*s}${t>=0?"+":""}${t}`;return`DC <span class="dc-roller" mode="${A?"dice":""}" onclick="dcRollerClick(this, '${r}')" data-roll-prof-bonus="${e}" data-roll-prof-dice="${r}">${A?r:e}</span>`}return t}))})}),a=EntryRenderer.utils.tabButton("Info",()=>profBtn=profBtn||n.children().detach(),s),o=EntryRenderer.utils.tabButton("Images",()=>profBtn=profBtn||n.children().detach(),()=>s(!0));EntryRenderer.utils.bindTabButtons(i,a,o),loadsub([]),ListUtil.updateSelected()}function handleUnknownHash(t,e){const n=Object.keys(loadedSources).find(e=>e.toLowerCase()===decodeURIComponent(t.split(HASH_LIST_SEP)[1]).toLowerCase());n&&loadSource(JSON_LIST_NAME,t=>{addMonsters(t),History.hashChange()})(n,"yes")}function dcRollerClick(t,e){const n=EntryRenderer.dice._parse(e),r=n.dice.map(t=>({number:t.num,faces:t.faces}));r[0].modifier=n.mod;const s={type:"dice",rollable:!0,toRoll:r};EntryRenderer.dice.rollerClick(t,JSON.stringify(s))}const SKILL_TO_ATB_ABV={athletics:"str",acrobatics:"dex","sleight of hand":"dex",stealth:"dex",arcana:"int",history:"int",investigation:"int",nature:"int",religion:"int","animal handling":"wis",insight:"wis",medicine:"wis",perception:"wis",survival:"wis",deception:"cha",intimidation:"cha",performance:"cha",persuasion:"cha"};function getAttribute(t){return SKILL_TO_ATB_ABV[t.toLowerCase().trim()]}function loadsub(t){filterBox.setFromSubHashes(t),ListUtil.setFromSubHashes(t,sublistFuncPreload);const e=t.find(t=>t.startsWith(printBookView.hashKey));e&&"true"===UrlUtil.unpackSubHash(e)[printBookView.hashKey][0]?printBookView.open():printBookView.teardown()}