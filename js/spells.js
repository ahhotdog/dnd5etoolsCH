"use strict";const JSON_DIR="data/spells/",JSON_LIST_NAME="spell",META_ADD_CONC="Concentration",META_ADD_V="Verbal",META_ADD_S="Somatic",META_ADD_M="Material",META_ADD_M_COST="Material with Cost",META_ADD_MB_PERMANENT="Permanent Effects",META_ADD_MB_SCALING="Scaling Effects",META_RITUAL="Ritual",META_TECHNOMAGIC="Technomagic",P_LEVEL="level",P_NORMALISED_TIME="normalisedTime",P_SCHOOL="school",P_NORMALISED_RANGE="normalisedRange",STR_WIZARD="Wizard",STR_FIGHTER="Fighter",STR_ROGUE="Rogue",STR_CLERIC="Cleric",STR_SORCERER="Sorcerer",STR_ELD_KNIGHT="Eldritch Knight",STR_ARC_TCKER="Arcane Trickster",STR_DIV_SOUL="Divine Soul",STR_FAV_SOUL_V2="Favored Soul v2 (UA)",STR_FAV_SOUL_V3="Favored Soul v3 (UA)",TM_ACTION="action",TM_B_ACTION="bonus",TM_REACTION="reaction",TM_ROUND="round",TM_MINS="minute",TM_HRS="hour",TO_HIDE_SINGLETON_TIMES=["action",TM_B_ACTION,TM_REACTION,TM_ROUND],TIME_UNITS_TO_FULL={action:"Action"};TIME_UNITS_TO_FULL[TM_B_ACTION]="Bonus Action",TIME_UNITS_TO_FULL[TM_REACTION]="Reaction",TIME_UNITS_TO_FULL[TM_ROUND]="Rounds",TIME_UNITS_TO_FULL[TM_MINS]="Minutes",TIME_UNITS_TO_FULL[TM_HRS]="Hours";const F_RNG_POINT="Point",F_RNG_SELF_AREA="Self (Area)",F_RNG_SELF="Self",F_RNG_TOUCH="Touch",F_RNG_SPECIAL="Special";let tableDefault;function getFltrSpellLevelStr(e){return 0===e?Parser.spLevelToFull(e):Parser.spLevelToFull(e)+" level"}function getNormalisedTime(e){const s=e[0];let t=1,l=0;switch(s.unit){case TM_B_ACTION:l=1;break;case TM_REACTION:l=2;break;case TM_ROUND:t=6;break;case TM_MINS:t=60;break;case TM_HRS:t=3600}return e.length>1&&(l+=.5),t*s.number+l}const INCHES_PER_FOOT=12,FEET_PER_MILE=5280;function getNormalisedRange(e){let s=1,t=0,l=0;switch(e.type){case RNG_SPECIAL:return 1e9;case RNG_POINT:r();break;case RNG_LINE:l=1,r();break;case RNG_CONE:l=2,r();break;case RNG_RADIUS:l=3,r();break;case RNG_HEMISPHERE:l=4,r();break;case RNG_SPHERE:l=5,r();break;case RNG_CUBE:l=6,r()}return s*t+l;function r(){const l=e.distance;switch(l.type){case UNT_FEET:s=INCHES_PER_FOOT,t=l.amount;break;case UNT_MILES:s=INCHES_PER_FOOT*FEET_PER_MILE,t=l.amount;break;case RNG_SELF:t=0;break;case RNG_TOUCH:t=1;break;case RNG_SIGHT:s=INCHES_PER_FOOT*FEET_PER_MILE,t=12;break;case RNG_UNLIMITED_SAME_PLANE:t=9e8;break;case RNG_UNLIMITED:t=900000001}}}function getRangeType(e){switch(e.type){case RNG_SPECIAL:return F_RNG_SPECIAL;case RNG_POINT:switch(e.distance.type){case RNG_SELF:return F_RNG_SELF;case RNG_TOUCH:return F_RNG_TOUCH;default:return F_RNG_POINT}case RNG_LINE:case RNG_CONE:case RNG_RADIUS:case RNG_HEMISPHERE:case RNG_SPHERE:case RNG_CUBE:return F_RNG_SELF_AREA}}function getTblTimeStr(e){return 1===e.number&&TO_HIDE_SINGLETON_TIMES.includes(e.unit)?`${e.unit.uppercaseFirst()}${e.unit===TM_B_ACTION?" acn.":""}`:`${e.number} ${e.unit===TM_B_ACTION?"Bonus acn.":e.unit}${e.number>1?"s":""}`.uppercaseFirst()}function getTimeDisplay(e){return TIME_UNITS_TO_FULL[e]}function getClassFilterStr(e){return`${e.name.split("(")[0].trim()}${e.source!==SRC_PHB?` (${Parser.sourceJsonToAbv(e.source)})`:""}`}function getMetaFilterObj(e){const s=[];return e.meta&&e.meta.ritual&&s.push(META_RITUAL),e.meta&&e.meta.technomagic&&s.push(META_TECHNOMAGIC),e.duration.filter(e=>e.concentration).length&&s.push(META_ADD_CONC),e.components.v&&s.push(META_ADD_V),e.components.s&&s.push(META_ADD_S),e.components.m&&s.push(META_ADD_M),e.components.m&&e.components.m.cost&&s.push(META_ADD_M_COST),(e.permanentEffects||e.duration.filter(e=>"permanent"===e.type).length)&&s.push(META_ADD_MB_PERMANENT),(e.scalingEffects||e.entriesHigherLevel)&&s.push(META_ADD_MB_SCALING),s}function getFilterAbilitySave(e){return`${e.uppercaseFirst().substring(0,3)}. Save`}function getFilterAbilityCheck(e){return`${e.uppercaseFirst().substring(0,3)}. Check`}function handleBrew(e){addSpells(e.spell)}function pPostLoad(){return new Promise(e=>{BrewUtil.pAddBrewData().then(handleBrew).catch(BrewUtil.purgeBrew).then(()=>{BrewUtil.makeBrewButton("manage-brew"),BrewUtil.bind({list:list,filterBox:filterBox,sourceFilter:sourceFilter}),ListUtil.loadState();ListUtil.bindShowTableButton("btn-show-table","Spells",spellList,{name:{name:"Name",transform:!0,flex:1},source:{name:"Source",transform:e=>`<span class="source${Parser.stringToCasedSlug(e)}" title="${Parser.sourceJsonToFull(e)}">${Parser.sourceJsonToAbv(e)}</span>`,flex:1},level:{name:"Level",transform:e=>Parser.spLevelToFull(e),flex:1},time:{name:"Casting Time",transform:e=>getTblTimeStr(e[0]),flex:1},school:{name:"School",transform:e=>`<span class="school_${e}">${Parser.spSchoolAbvToFull(e)}</span>`,flex:1},range:{name:"Range",transform:e=>Parser.spRangeToFull(e),flex:1},components:{name:"Components",transform:e=>Parser.spComponentsToFull(e),flex:1},classes:{name:"Classes",transform:e=>Parser.spMainClassesToFull(e),flex:1},entries:{name:"Text",transform:e=>EntryRenderer.getDefaultRenderer().renderEntry({type:"entries",entries:e},1),flex:3},entriesHigherLevel:{name:"At Higher Levels",transform:e=>EntryRenderer.getDefaultRenderer().renderEntry({type:"entries",entries:e||[]},1),flex:2}},{generator:()=>{const e=ListUtil.getSublistedIds();if(e.length){const s=new Set(e);return s.has.bind(s)}{const e=new Set(ListUtil.getVisibleIds());return e.has.bind(e)}}},(e,s)=>SortUtil.ascSort(e.name,s.name)||SortUtil.ascSort(e.source,s.source)),e()})})}let list,spellBookView,brewSpellClasses;window.onload=function(){ExcludeUtil.initialise(),multisourceLoad(JSON_DIR,JSON_LIST_NAME,pageInit,addSpells,pPostLoad)};const sourceFilter=getSourceFilter(),levelFilter=new Filter({header:"Level",items:[0,1,2,3,4,5,6,7,8,9],displayFn:getFltrSpellLevelStr}),classFilter=new Filter({header:"Class"}),subclassFilter=new GroupedFilter({header:"Subclass",numGroups:2}),classAndSubclassFilter=new MultiFilter("Classes",classFilter,subclassFilter),raceFilter=new Filter({header:"Race"}),metaFilter=new Filter({header:"Components & Miscellaneous",items:[META_ADD_CONC,META_ADD_V,META_ADD_S,META_ADD_M,META_ADD_M_COST,META_RITUAL,META_TECHNOMAGIC,META_ADD_MB_PERMANENT,META_ADD_MB_SCALING]}),schoolFilter=new Filter({header:"School",items:[SKL_ABV_ABJ,SKL_ABV_CON,SKL_ABV_DIV,SKL_ABV_ENC,SKL_ABV_EVO,SKL_ABV_ILL,SKL_ABV_NEC,SKL_ABV_TRA],displayFn:Parser.spSchoolAbvToFull}),damageFilter=new Filter({header:"Damage Type",items:["acid","bludgeoning","cold","fire","force","lightning","necrotic","piercing","poison","psychic","radiant","slashing","thunder"],displayFn:StrUtil.uppercaseFirst}),spellAttackFilter=new Filter({header:"Spell Attack",items:["M","R","O"],displayFn:Parser.spAttackTypeToFull}),saveFilter=new Filter({header:"Saving Throw",items:["strength","constitution","dexterity","intelligence","wisdom","charisma"],displayFn:getFilterAbilitySave}),checkFilter=new Filter({header:"Opposed Ability Check",items:["strength","constitution","dexterity","intelligence","wisdom","charisma"],displayFn:getFilterAbilityCheck}),timeFilter=new Filter({header:"Cast Time",items:["action",TM_B_ACTION,TM_REACTION,TM_ROUND,TM_MINS,TM_HRS],displayFn:getTimeDisplay}),durationFilter=new Filter({header:"Duration",items:["instant","timed","permanent","special"],displayFn:StrUtil.uppercaseFirst}),rangeFilter=new Filter({header:"Range",items:[F_RNG_SELF,F_RNG_TOUCH,F_RNG_POINT,F_RNG_SELF_AREA,F_RNG_SPECIAL]}),filterBox=initFilterBox(sourceFilter,levelFilter,classAndSubclassFilter,raceFilter,metaFilter,schoolFilter,damageFilter,spellAttackFilter,saveFilter,checkFilter,timeFilter,durationFilter,rangeFilter);function pageInit(e){tableDefault=$("#pagecontent").html(),sourceFilter.items=Object.keys(e).map(e=>new FilterItem(e,loadSource(JSON_LIST_NAME,addSpells))),sourceFilter.items.sort(SortUtil.ascSort),(list=ListUtil.search({valueNames:["name","source","level","time","school","range","classes","uniqueid"],listClass:"spells"})).on("updated",()=>{filterBox.setCount(list.visibleItems.length,list.items.length)}),$(filterBox).on(FilterBox.EVNT_VALCHANGE,handleFilterChange),$("#filtertools").find("button.sort").on(EVNT_CLICK,function(){const e=$(this);"asc"===e.attr("sortby")?e.attr("sortby","desc"):e.attr("sortby","asc"),list.sort(e.data("sort"),{order:e.attr("sortby"),sortFunction:sortSpells})});ListUtil.initSublist({valueNames:["name","level","time","school","range","id"],listClass:"subspells",sortFunction:sortSpells});ListUtil.initGenericPinnable(),spellBookView=new BookModeView("bookview",$("#btn-spellbook"),"Please pin some spells first",e=>{const s=ListUtil.getSublistedIds().map(e=>spellList[e]);let t=0;const l=[];for(let e=0;e<10;++e){const r=s.filter(s=>s.level===e);if(r.length){const s=0===e?`${Parser.spLevelToFull(e)}s`:`${Parser.spLevelToFull(e)}-level Spells`;l.push(EntryRenderer.utils.getBorderTr(`<span class="spacer-name">${s}</span>`)),l.push('<tr class="spellbook-level"><td>'),r.forEach(e=>{l.push('<table class="spellbook-entry"><tbody>'),l.push(EntryRenderer.spell.getCompactRenderedString(e)),l.push("</tbody></table>")}),l.push("</td></tr>")}t+=r.length}return e.append(l.join("")),t}),brewSpellClasses={PHB:{}},BrewUtil.pAddBrewData().then(e=>{function s(e,s=SRC_PHB,t){t.subclassSpells&&t.subclassSpells.forEach(l=>{const r="string"==typeof l?l:l.name,a="string"==typeof l?"PHB":l.source;brewSpellClasses[a]=brewSpellClasses[a]||{fromClassList:[],fromSubclass:[]},brewSpellClasses[a][r]=brewSpellClasses[a][r]||{fromClassList:[],fromSubclass:[]},brewSpellClasses[a][r].fromSubclass.push({class:{name:e,source:s},subclass:{name:t.shortName,source:t.source}})})}e.class&&e.class.forEach(e=>{e.classSpells&&e.classSpells.forEach(s=>{const t="string"==typeof s?s:s.name,l="string"==typeof s?"PHB":s.source;brewSpellClasses[l]=brewSpellClasses[l]||{},brewSpellClasses[l][t]=brewSpellClasses[l][t]||{fromClassList:[],fromSubclass:[]},brewSpellClasses[l][t].fromClassList.push({name:e.name,source:e.source})}),e.subclasses&&e.subclasses.forEach(t=>s(e.name,e.source,t))}),e.subclass&&e.subclass.forEach(e=>s(e.class,e.classSource,e))}).catch(BrewUtil.purgeBrew)}function getSublistItem(e,s){return`\n\t\t<li class="row" ${FLTR_ID}="${s}" oncontextmenu="ListUtil.openSubContextMenu(event, this)">\n\t\t\t<a href="#${UrlUtil.autoEncodeHash(e)}" title="${e.name}">\n\t\t\t\t<span class="name col-xs-3 col-xs-3-9">${e.name}</span>\n\t\t\t\t<span class="level col-xs-1 col-xs-1-5">${Parser.spLevelToFull(e.level)}</span>\n\t\t\t\t<span class="time col-xs-1 col-xs-1-8">${getTblTimeStr(e.time[0])}</span>\n\t\t\t\t<span class="school col-xs-1 col-xs-1-2 school_${e.school}" title="${Parser.spSchoolAbvToFull(e.school)}">${Parser.spSchoolAbvToShort(e.school)}</span>\n\t\t\t\t<span class="range col-xs-3 col-xs-3-6">${Parser.spRangeToFull(e.range)}</span>\t\t\n\t\t\t\t<span class="id hidden">${s}</span>\t\t\t\t\n\t\t\t</a>\n\t\t</li>\n\t`}function handleFilterChange(){const e=filterBox.getValues();list.filter(s=>{const t=spellList[$(s.elm).attr(FLTR_ID)];return filterBox.toDisplay(e,t._fSources,t.level,[t._fClasses,t._fSubclasses],t._fRaces,t._fMeta,t.school,t.damageInflict,t.spellAttack,t.savingThrow,t.opposedCheck,t._fTimeType,t._fDurationType,t._fRangeType)}),onFilterChangeMulti(spellList)}let spellList=[],spI=0;function addSpells(e){if(!e||!e.length)return;spellList=spellList.concat(e);const s=$("ul.spells");let t="";for(;spI<spellList.length;spI++){const e=spellList[spI];if(ExcludeUtil.isExcluded(e.name,"spell",e.source))continue;let s=Parser.spLevelToFull(e.level);e.meta&&e.meta.ritual&&(s+=" (rit.)"),e.meta&&e.meta.technomagic&&(s+=" (tec.)"),e.classes.fromClassList.filter(e=>e.name===STR_WIZARD&&e.source===SRC_PHB).length&&(e.classes.fromSubclass||(e.classes.fromSubclass=[]),e.classes.fromSubclass.push({class:{name:STR_FIGHTER,source:SRC_PHB},subclass:{name:STR_ELD_KNIGHT,source:SRC_PHB}}),e.classes.fromSubclass.push({class:{name:STR_ROGUE,source:SRC_PHB},subclass:{name:STR_ARC_TCKER,source:SRC_PHB}}),e.level>4&&(e.scrollNote=!0)),e.classes.fromClassList.filter(e=>e.name===STR_CLERIC&&e.source===SRC_PHB).length&&(e.classes.fromSubclass||(e.classes.fromSubclass=[]),e.classes.fromSubclass.push({class:{name:STR_SORCERER,source:SRC_PHB},subclass:{name:STR_DIV_SOUL,source:SRC_XGE}}),e.classes.fromSubclass.push({class:{name:STR_SORCERER,source:SRC_PHB},subclass:{name:STR_FAV_SOUL_V2,source:SRC_UAS}}),e.classes.fromSubclass.push({class:{name:STR_SORCERER,source:SRC_PHB},subclass:{name:STR_FAV_SOUL_V3,source:SRC_UARSC}})),brewSpellClasses[e.source]&&brewSpellClasses[e.source][e.name]&&(e.classes=e.classes||{},brewSpellClasses[e.source][e.name].fromClassList.length&&(e.classes.fromClassList=e.classes.fromClassList||[],e.classes.fromClassList=e.classes.fromClassList.concat(brewSpellClasses[e.source][e.name].fromClassList)),brewSpellClasses[e.source][e.name].fromSubclass.length&&(e.classes.fromSubclass=e.classes.fromSubclass||[],e.classes.fromSubclass=e.classes.fromSubclass.concat(brewSpellClasses[e.source][e.name].fromSubclass))),e[P_NORMALISED_TIME]=getNormalisedTime(e.time),e[P_NORMALISED_RANGE]=getNormalisedRange(e.range),e.damageInflict||(e.damageInflict=[]),e._fSources=ListUtil.getCompleteSources(e),e._fMeta=getMetaFilterObj(e),e._fClasses=e.classes.fromClassList.map(e=>getClassFilterStr(e)),e._fSubclasses=e.classes.fromSubclass?e.classes.fromSubclass.map(e=>new FilterItem(getClassFilterStr(e.subclass),null,SourceUtil.hasBeenReprinted(e.subclass.name,e.subclass.source)||Parser.sourceJsonToFull(e.subclass.source).startsWith(UA_PREFIX)||Parser.sourceJsonToFull(e.subclass.source).startsWith(PS_PREFIX))):[],e._fRaces=e.races?e.races.map(e=>e.baseName||e.name):[],e._fTimeType=e.time.map(e=>e.unit),e._fDurationType=e.duration.map(e=>e.type),e._fRangeType=getRangeType(e.range),t+=`\n\t\t\t<li class="row" ${FLTR_ID}="${spI}" onclick="ListUtil.toggleSelected(event, this)" oncontextmenu="ListUtil.openContextMenu(event, this)">\n\t\t\t\t<a id="${spI}" href="#${UrlUtil.autoEncodeHash(e)}" title="${e.name}">\n\t\t\t\t\t<span class="name col-xs-3 col-xs-3-5">${e.name}</span>\n\t\t\t\t\t<span class="source col-xs-1 col-xs-1-7 source${Parser.stringToCasedSlug(e.source)}" title="${Parser.sourceJsonToFull(e.source)}">${Parser.sourceJsonToAbv(e.source)}</span>\n\t\t\t\t\t<span class="level col-xs-1 col-xs-1-5">${s}</span>\n\t\t\t\t\t<span class="time col-xs-1 col-xs-1-7">${getTblTimeStr(e.time[0])}</span>\n\t\t\t\t\t<span class="school col-xs-1 col-xs-1-2 school_${e.school}" title="${Parser.spSchoolAbvToFull(e.school)}">${Parser.spSchoolAbvToShort(e.school)}</span>\n\t\t\t\t\t<span class="range col-xs-2 col-xs-2-4">${Parser.spRangeToFull(e.range)}</span>\n\n\t\t\t\t\t<span class="classes" style="display: none">${Parser.spClassesToFull(e.classes,!0)}</span>\n\t\t\t\t\t<span class="uniqueid hidden">${e.uniqueId?e.uniqueId:spI}</span>\n\t\t\t\t</a>\n\t\t\t</li>`,sourceFilter.addIfAbsent(e._fSources),raceFilter.addIfAbsent(e._fRaces),e._fClasses.forEach(e=>classFilter.addIfAbsent(e)),e._fSubclasses.forEach(e=>subclassFilter.addIfAbsent(e))}const l=ListUtil.getSearchTermAndReset(list);s.append(t),sourceFilter.items.sort(SortUtil.ascSort),classFilter.items.sort(SortUtil.ascSort),subclassFilter.items.sort(SortUtil.ascSort),raceFilter.items.sort(SortUtil.ascSort),list.reIndex(),l&&list.search(l),list.sort("name"),filterBox.render(),handleFilterChange(),ListUtil.setOptions({itemList:spellList,getSublistRow:getSublistItem,primaryLists:[list]}),ListUtil.bindPinButton(),EntryRenderer.hover.bindPopoutButton(spellList),UrlUtil.bindLinkExportButton(filterBox),ListUtil.bindDownloadButton(),ListUtil.bindUploadButton(sublistFuncPreload)}function sublistFuncPreload(e,s){const t=Object.keys(loadedSources).filter(e=>loadedSources[e].loaded),l=e.sources.map(e=>e.toLowerCase()),r=Object.keys(loadedSources).filter(e=>!t.includes(e)).filter(e=>l.includes(e.toLowerCase())),a=r.length;if(a){let e=0;r.forEach(t=>{loadSource(JSON_LIST_NAME,t=>{addSpells(t),++e===a&&s()})(t,"yes")})}else s()}function sortSpells(e,s,t){if(e=spellList[e.elm.getAttribute(FLTR_ID)],s=spellList[s.elm.getAttribute(FLTR_ID)],"name"===t.valueName)return l();if("source"===t.valueName){const t=SortUtil.ascSort(e.source,s.source);return 0!==t?t:SortUtil.ascSort(e.name,s.name)}return"level"===t.valueName?r(SortUtil.ascSort,P_LEVEL):"time"===t.valueName?r(SortUtil.ascSort,P_NORMALISED_TIME):"school"===t.valueName?r(SortUtil.ascSort,P_SCHOOL):"range"===t.valueName?r(SortUtil.ascSort,P_NORMALISED_RANGE):0;function l(){const t=SortUtil.ascSort(e.name,s.name);return 0!==t?t:SortUtil.ascSort(e.source,s.source)}function r(t,r){const a=t(e[r],s[r]);return 0!==a?a:l()}}const renderer=EntryRenderer.getDefaultRenderer();function loadhash(e){renderer.setFirstSection(!0);const s=$("#pagecontent").empty(),t=spellList[e];s.append(EntryRenderer.spell.getRenderedString(t,renderer)),loadsub([]),ListUtil.updateSelected()}function handleUnknownHash(e,s){const t=Object.keys(loadedSources).find(s=>s.toLowerCase()===decodeURIComponent(e.split(HASH_LIST_SEP)[1]).toLowerCase());t?loadSource(JSON_LIST_NAME,e=>{addSpells(e),History.hashChange()})(t,"yes"):History._freshLoad()}function loadsub(e){filterBox.setFromSubHashes(e),ListUtil.setFromSubHashes(e,sublistFuncPreload);const s=e.find(e=>e.startsWith(spellBookView.hashKey));s&&"true"===UrlUtil.unpackSubHash(s)[spellBookView.hashKey][0]?spellBookView.open():spellBookView.teardown()}